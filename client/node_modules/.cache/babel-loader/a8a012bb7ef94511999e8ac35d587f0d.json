{"ast":null,"code":"var _AddTodoMutation,\n    _jsxFileName = \"/home/adamhanna/apps/relay-mongo-subscriptions-example/client/src/AddTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { commitMutation } from \"react-relay\";\nimport { useRelayEnvironment } from \"react-relay/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTodoMutation = _AddTodoMutation !== void 0 ? _AddTodoMutation : (_AddTodoMutation = require(\"./__generated__/AddTodoMutation.graphql\"), _AddTodoMutation.hash && _AddTodoMutation.hash !== \"f95f689d649aafcd0d1e5f36903f625d\" && console.error(\"The definition of 'AddTodoMutation' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data.\"), _AddTodoMutation);\nexport const AddTodo = ({}) => {\n  _s();\n\n  const environment = useRelayEnvironment();\n  const [description, setDescription] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addTodoWrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: () => {\n        commitMutation(environment, {\n          mutation: AddTodoMutation,\n          variables: {\n            description\n          },\n          onCompleted: (_response, errors) => {\n            if (errors) {\n              console.error(errors);\n            }\n\n            setDescription('');\n          },\n          onError: err => console.error(err)\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => {\n          setDescription(e.target.value);\n        },\n        placeholder: \"New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddTodo, \"KQRroHTL/AIZwuzTZs9hwc3RAR0=\", false, function () {\n  return [useRelayEnvironment];\n});\n\n_c = AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/home/adamhanna/apps/relay-mongo-subscriptions-example/client/src/AddTodo.tsx"],"names":["React","useState","commitMutation","useRelayEnvironment","AddTodoMutation","AddTodo","environment","description","setDescription","mutation","variables","onCompleted","_response","errors","console","error","onError","err","e","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,mBAAT,QAAoC,mBAApC;;AAGA,MAAMC,eAAe,sYAArB;AAgBA,OAAO,MAAMC,OAAO,GAAG,CAAC,EAAD,KAEV;AAAA;;AACX,QAAMC,WAAW,GAAGH,mBAAmB,EAAvC;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AACE,MAAA,QAAQ,EAAE,MAAM;AACdC,QAAAA,cAAc,CAACI,WAAD,EAAc;AAC1BG,UAAAA,QAAQ,EAAEL,eADgB;AAE1BM,UAAAA,SAAS,EAAE;AACTH,YAAAA;AADS,WAFe;AAK1BI,UAAAA,WAAW,EAAE,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AAClC,gBAAIA,MAAJ,EAAY;AACVC,cAAAA,OAAO,CAACC,KAAR,CAAcF,MAAd;AACD;;AAEDL,YAAAA,cAAc,CAAC,EAAD,CAAd;AACD,WAXyB;AAY1BQ,UAAAA,OAAO,EAAEC,GAAG,IAAIH,OAAO,CAACC,KAAR,CAAcE,GAAd;AAZU,SAAd,CAAd;AAcD,OAhBH;AAAA,8BAkBE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAEV,WAA1B;AAAuC,QAAA,QAAQ,EAAEW,CAAC,IAAI;AAAEV,UAAAA,cAAc,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAAgC,SAAxF;AAA0F,QAAA,WAAW,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA/BM;;GAAMf,O;UAGSF,mB;;;KAHTE,O","sourcesContent":["import React, { useState } from 'react'\nimport { commitMutation } from \"react-relay\"\nimport { useRelayEnvironment } from \"react-relay/hooks\"\nimport graphql from \"babel-plugin-relay/macro\"\n\nconst AddTodoMutation = graphql`\n  mutation AddTodoMutation(\n    $description: String!\n  ) {\n    newTodo(description: $description) {\n      _id\n      description\n      completed\n    }\n  }\n`\n\nexport type Props = {\n\n}\n\nexport const AddTodo = ({\n\n}: Props) => {\n  const environment = useRelayEnvironment()\n  const [description, setDescription] = useState('')\n\n  return (\n    <div className=\"addTodoWrapper\">\n      <form\n        onSubmit={() => {\n          commitMutation(environment, {\n            mutation: AddTodoMutation,\n            variables: {\n              description\n            },\n            onCompleted: (_response, errors) => {\n              if (errors) {\n                console.error(errors);\n              }\n\n              setDescription('')\n            },\n            onError: err => console.error(err)\n          });\n        }}\n      >\n        <input type=\"text\" value={description} onChange={e => { setDescription(e.target.value) }} placeholder=\"New Todo\" />\n        <button type=\"submit\">Add Todo</button>\n      </form>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}